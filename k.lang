<?xml version="1.0" encoding="UTF-8"?>

<language id="k" _name="K" version="2.0" _section="Sources">
    <metadata>
      <property name="mimetypes">text/x-c;text/x-csrc;image/x-xpixmap</property>
      <property name="globs">*.k</property>
      <property name="line-comment-start">//</property>
      <property name="block-comment-start">/*</property>
      <property name="block-comment-end">*/</property>
    </metadata>
	
    <styles>
	
        <style id="comment"           _name="Comment"             map-to="def:comment"/>
        <style id="error"             _name="Error"               map-to="def:error"/>
        <style id="string"            _name="String"              map-to="def:string"/>
        <style id="char"              _name="Character"           map-to="def:character"/>
        <style id="keyword"           _name="Keyword"             map-to="def:keyword"/>
        <style id="type"              _name="Data Type"           map-to="def:type"/>
	<style id="boolean"           _name="Boolean value"       map-to="def:boolean"/>
	<style id="syntax" 	      _name="Syntax"              map-to="def:keyword"/>
	<style id="s_paranthesis"     _name="Square Brackets"     map-to="def:keyword"/>
	<style id="module"            _name="Module"              map-to="def:keyword"/>
	<style id="decimal"           _name="Decimal number"      map-to="def:decimal"/>
	<style id="tag" 	      _name="Tag"                 map-to="def:type"/>
	<style id="o_keyword"         _name="Keyword2"            map-to="def:type"/>
	<style id="r_paranthesis"     _name="Round Brackets"      map-to="def:preprocessor"/>
	<style id="a_paranthesis"     _name="Squigly Brackets"    map-to="def:string"/>
		
    </styles>

    <definitions>
        
        <context id="printf" style-ref="printf" extend-parent="false">
            <match extended="true">
                \%\%|\%
                (?:[1-9][0-9]*\$)?      # argument
                [#0\-\ \+\'I]*          # flags
                (?:[1-9][0-9]*|\*)?     # width
                (?:\.\-?(?:[0-9]+|\*))? # precision
                (?:hh|ll|[hlLqjzt])?    # length modifier
                [diouxXeEfFgGaAcsCSpnm] # conversion specifier
            </match>
        </context>

        <define-regex id="escaped-character" extended="true">
            \\(                   # leading backslash
            [\\\"\'nrbtfav\?] |   # escaped character
            [0-7]{1,3} |          # one, two, or three octal digits
            x[0-9A-Fa-f]+         # 'x' followed by hex digits
            )
        </define-regex>

        <context id="k" class="no-spell-check">
            <include>

                <context ref="gtk-doc:inline-docs-section"/>

                <context id="comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
                    <start>//</start>

                    <include>
                      <context ref="def:in-line-comment"/>
                    </include>
                </context>


		<context id="s_paranthesis" style-ref="keyword">
			<start>\[</start>
			<end>\]</end>	
		</context>
		
		<context id="r_paranthesis" style-ref="preprocessor">
			<start>\(</start>
			<end>\)</end>
		</context>
		
		<context id="a_paranthesis" style-ref="string">
			<start>\{</start>
			<end>\}</end>
		</context>

		<context id="module" style-ref="keyword">
			<keyword>module</keyword>
			<keyword>endmodule</keyword>
		</context>

                <context id="comment-multiline" style-ref="comment" class="comment" class-disabled="no-spell-check">
                    <start>/\*</start>
                    <end>\*/</end>
                    <include>
                        <context ref="def:in-comment"/>
                    </include>
                </context>

                <context id="string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
                    <start>L?"</start>
                    <end>"</end>
                    <include>
                        <context ref="printf"/>
                        <context id="escaped-character" style-ref="escaped-character">
                            <match>\%{escaped-character}</match>
                        </context>
                        <context ref="def:line-continue"/>
                    </include>
                </context>

                <context id="char" style-ref="char">
                    <match>L?'(\%{escaped-character}|.)'</match>
                </context>

                <context id="float" style-ref="floating-point">
                    <match extended="true">
                        (?&lt;![\w\.])
                        ((\.[0-9]+ | [0-9]+\.[0-9]*) ([Ee][+-]?[0-9]*)? |
                         ([0-9]+[Ee][+-]?[0-9]*))
                        [fFlL]?
                        (?![\w\.])
                    </match>
                </context>

         	<context id="decimal" style-ref="decimal">
                    <match extended="true">
                        (?&lt;![\w\.])
                        [0-9]+[uUlL]*
                        (?![\w\.])
                    </match>
                </context>

             

                <!-- Keywords -->
                <context id="keywords" style-ref="keyword" class="keyword">
                    			<keyword>syntax</keyword>
					<keyword>including</keyword>
					<keyword>import</keyword>
					<keyword>imports</keyword>
					<keyword>sort</keyword>
					<keyword>op</keyword>
					<keyword>subsort</keyword>
					<keyword>rule</keyword>
					<keyword>eq</keyword>
					<keyword>ceq</keyword>
					<keyword>load</keyword>
					<keyword>notBool</keyword>
					<keyword>andBool</keyword>
					<keyword>orBool</keyword>
					<keyword>when</keyword>
					<keyword>require</keyword>
					<keyword>requires</keyword>
					<keyword>keys</keyword>
					<keyword>in</keyword>
					<keyword>context</keyword>
					<keyword>configuration</keyword>
					<keyword>binder</keyword>
					<keyword>left</keyword>
					<keyword>right</keyword>
					<keyword>strict</keyword>
					<keyword>seqstrict</keyword>
					<keyword>bracket</keyword>
					<keyword>non-assoc</keyword>
					<keyword>notInRules</keyword>
					<keyword>superheat</keyword>
					<keyword>supercool</keyword>
					<keyword>prefer</keyword>
					<keyword>macro</keyword>
					<keyword>structural</keyword>
					<keyword>klabel</keyword>
					<keyword>klatex</keyword>
					<keyword>onlyLabel</keyword>
					<keyword>hook</keyword>
					<keyword>function</keyword>
					<keyword>transition</keyword>
					<keyword>priority</keyword>
					<keyword>priorities</keyword>
					<keyword>anywhere</keyword>
					<keyword>owise</keyword>
					<keyword>out</keyword>
					<keyword>stream</keyword>
                </context>

		<context id="o_keyword" style-ref="keyword">
			<keyword>isMatching</keyword>
			<keyword>getMatching</keyword>
			<keyword>lengthString</keyword>
			<keyword>chrChar</keyword>
			<keyword>ordChar</keyword>
			<keyword>substrString</keyword>
			<keyword>subString</keyword>
			<keyword>findString</keyword>
			<keyword>rfindString</keyword>
			<keyword>String2Int</keyword>
			<keyword>Int2String</keyword>
			<keyword>categoryChar</keyword>
			<keyword>directionalityChar</keyword>
			<keyword>fresh</keyword>
			<keyword>ListItem</keyword>
			<keyword>SetItem</keyword>
			<keyword>BagItem</keyword>
			<keyword>.List</keyword>
			<keyword>.Set</keyword>
			<keyword>.Bag</keyword>
			<keyword>.K</keyword>
			<keyword>.</keyword>
		</context>

                <context id="types" style-ref="type" class="type">
                    <keyword>Bool</keyword>
                    <keyword>Int</keyword>
                    <keyword>Id</keyword>
		    <keyword>String</keyword>			
                </context>

		<context id="tag" style-ref="type">
			<start>&lt;</start>
			<end>&gt;</end>	
			<include>
				<context ref="keywords"/>
				<context ref="char"/>
			</include>
		</context>

                <!-- C99 booleans -->
                <context id="boolean" style-ref="boolean" class="boolean">
                    <keyword>true</keyword>
                    <keyword>false</keyword>
                </context>

            </include>
        </context>
    </definitions>
</language>
